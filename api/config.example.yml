# FIWARE-PGSQL/CartoDB CONNECTOR CONFIGURATION FILE

# BASE URL
baseURL: http://url:port

# Logging configuration parameters
logging:
  # Level options: INFO|ERROR|DEBUG. Default: INFO
  level: INFO
  # Output options: console|file. Default: console
  output: console

# PostgreSQL configuration parameters
pgsql:
  host: XXX
  user: XXX
  password: XXX
  database: XXX
  port: XXX

# CartoDB configuration parameters
cartodb:
  apiKey: XXX
  user: XXX
  active: true
  # Optional. Default to false. If you've an enterprise account at CartoDB you must set this param to true
  enterprise: false

# urbo-processing parameters
processing:
  active: false
  url: http://localhost:XXXX
  requestAttempts: 5
  psqlJob: connectorPsql
  cartoJob: connectorCarto
  jobAttempts: 3
  priority: critical

# Notifier (to the api) configuration
notifier:
  url: http://<api direction>/notifier
  requestAttempts: 3
  tokenSecret: XXXXXX
  tokenExpiration: 30  # seconds

# Orion Context Broker API URLs
contextBrokerUrls:
  portAuthtk: XXXXX
  portCtxApi: XXXXX
  urlCtxBrBase: https://url

# Configuration for recreating (delete and create) subscriptions.
# Optional. Options: global|single|none. Default: none.
# Note: When 'single' is set, each subscription can have a 'recreateSubscription' boolean attribute.
recreateSubscriptions: global

# Fiware subservices catalog.
subservices:
    # Internal id of subservice. It must be a string without spaces or special characters. Only [a-z][A-Z]
  - id: id_subservice
    # Fiware service name
    service: XXX
    # Fiware subservice name (slash must be added)
    subservice: /XXX
    # Credentiales
    auth:
      user: XXX
      password: XXX

# List of subscriptions
subscriptions:
    # Mandatory: Internal ID for the subscription
  - id: subscription_id
    # Mandatory: ID of subservice at subservices catalog.
    subservice_id: id_subservice
    # Mandatory: schema to store data.
    schema: schemaname
    # Optional: Subscription duration (ISO8601 durations). Default: P2M
    # Duration syntax examples: 3 days = P3D
    #                           2 months = P2M
    #                           2 weeks = P2W
    #                           10 years = P10Y
    #                           5 hours = PT05H
    #                           30 minutes = PT30M
    #                           30 seconds = PT30S
    #                           3 months and 5 hours = P3MT05H
    #                           2 years, 3 months, 5 days, 5 hours, 10 minutes and 5 seconds = P2Y3M5DT05H10M05S
    subsduration: P2M
    # Optional: Subscription Throttling (ISO8601 durations). Default: PT0S (zero seconds)
    substhrottling: PT0S
    # Only if 'recreateSubscriptions' is set to 'single', this one will be taken into account.
    # Optional. Boolean. Default: false.
    recreateSubscription: false
    # Fiware entities to be subscribed.
    # Mandatory: typeName - entity types
    # Optional: typePattern - custom regular expressions to get entitites. Default pattern (get all entities from type): .*
    entityTypes:
      - typeName: type
        typePattern: .*
    # Optional: Table name for PGSQL and CartoDB. If not provided default to ID.
    tablename: subscription_id
    # Optional: Subscription mode. Posible values are append|update. Default: append
    mode: append
    # Default to false. IF set to true it fetches all the data from Fiware when the subscription is created the first time.
    fetchDataOnCreated: false
    # Configuration for sending "real time socket data' to the API via POST.
    notifier:
      namespace: namespace  # The namespace for the socket.
      asGeoJSONFeature: true  # If an attirbute position is sent, the rest of the attributes will be added as properties in the GeoJSON.
      attributes: global  # Options: global|single|none. Default: none. Note: When 'single' is set, each attribute can have a 'notifier' boolean attribute.
    # List of attributes. These are the attributes of the subscription and how they're mapped into the PostgreSQL database and CartoDB.
    attributes:
      - # Attribute name (Fiware attribute name)
        name: name
        # Database attribute name (If it does not exist "name" is used)
        namedb: name
        # Mandatory: Type of attribute: Currently supported: 'coords', 'string', 'float', 'integer',
        #            'ISO8601|timestamp', 'percent', 'json','geojson' (for all types oj GeoJSON),
        #            'geojson-point', 'geojson-line', 'geojson-polygon', 'geojson-multipoint',
        #            'geojson-multiline', 'geojson-multipolygon', 'list' (it cast its content to string),
        #            'list-string', 'list-numeric'.
        type: string
        # Optional. Default to false. If set to true, the attribute will be synced at CartoDB
        cartodb: true
        # Optional. Default to false. If true a index will be created at PostgreSQL.
        indexdb: true
        # Optional. Default to false. If true, it will be added in a UNIQUE constraint.
        # Note: 'id_entity' always is part of the constraint, but if it's the only attribute for the constraint, the constraint won't be created.
        outcome:
          factor: CONST
          operation: SUM|PROD|MIN|DIV
        constraint: true
        # Optional. Applies operation(factor) when inserting data
      - name: position
        type: coords
        cartodb: true
      - name: timeinstant
        type: ISO8601
      - name: valor_01
        type: string
        # Default to false. Related to 'notifier' in the subscription.
        notifier: false
    # Mandatory: List of trigger attributes. A notification will be sent by Context Broker when the value of one of the following attributes change.
    trigger_attributes:
      - timeinstant
